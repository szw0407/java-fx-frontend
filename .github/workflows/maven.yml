# This workflow will build a Java project with Maven on multiple platforms
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven (Multi-Platform)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn javafx:jlink --file pom.xml
    - name: Zip the output
      run: |
        zipFile="javafx-linux.zip"
        outputDir="target/javafx"
        if [ -f "$zipFile" ]; then
            rm "$zipFile"
        fi
        cd "$outputDir" && zip -r "../../$zipFile" . && cd ../..
        echo "Created zip file: $zipFile"
        
    - name: Upload the zip file
      uses: actions/upload-artifact@v4
      with:
        name: javafx-linux-output
        path: javafx-linux.zip

  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn javafx:jlink --file pom.xml
    - name: Zip the output
      run: |
        zipFile="javafx-macos.zip"
        outputDir="target/javafx"
        if [ -f "$zipFile" ]; then
            rm "$zipFile"
        fi
        cd "$outputDir" && zip -r "../../$zipFile" . && cd ../..
        echo "Created zip file: $zipFile"
        
    - name: Upload the zip file
      uses: actions/upload-artifact@v4
      with:
        name: javafx-macos-output
        path: javafx-macos.zip

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn javafx:jlink --file pom.xml
    - name: Zip the output
      run: |
        $zipFile = "javafx-windows.zip"
        $outputDir = "target\javafx"
        if (Test-Path $zipFile) {
            Remove-Item $zipFile
        }
        Compress-Archive -Path "$outputDir\*" -DestinationPath $zipFile -Force
        Write-Host "Created zip file: $zipFile"
        
    - name: Upload the zip file
      uses: actions/upload-artifact@v4
      with:
        name: javafx-windows-output
        path: javafx-windows.zip
        
        
